DOM
 1.1DOM概念: 
DOM文档对象模型，DOM对象不仅仅是一个普通的内置对象，它还是一个巨大的API的核心对象，它将文档的内容呈现在js面前，并赋予了js操作文档的能力.

 1.2 DOM节点:
    概念:加载html页面是，web浏览器生成一个树形结构，用来表示页面的内部结构，DOM将这种结构理解为节点组成。根据w3c的html DOM标准，html文档中的所有内容都是节点。
    整个文档是一个文档节点
    每个html元素是元素节点
    html元素内的文本节点
    每个html属性都是属性节点
    注释也是节点，叫注释节点
    
 1.3DOM树:
     概念:DOM树体现着html页面的层级结构，而DOM树有DOM文档树和DOM元素树两种，DOM元素树包含的只有元素节点，而DOM文档树则包括DOM文档中的所有内容。
     
 1.4获取元素: 
     1.4.1 getElementById();

     用id获取元素(接受一个参数：获取元素的id，如果找到相应元素，则返回该元素，否则返回null）

     1.4.2  getElementsByTagName()

     用标签名获取元素(可以获取该元素名称下所有的元素，返回一个伪数组，或者是节点列表)

     1.4.3getElementsByClassName()

     用类名获取元素

     1.4.4getElementsByName()

     用name属性值获取元素(获取相同名称的name元素，返回一个伪数组组合)

     1.4.5

     用选择器获取元素---------uerySelector()和querySelectorAll()可以依靠选择器找到元素，但是前者只能找到元素列表的第一个元素，而后者可以全部找到，注意，该方法性能没有直接利用标签寻找高。
     
 1.5 获取和设置获取元素中的其他信息:
     1.5.1 获取元素名-----tagName()

     使用id获取元素的时候，元素的名称会和整个元素一起显示出来，如果想要拿到该元素的元素名，也就是标签名则需要用tagName属性。该属性只能获取不能设置
    
     1.5.2 获取元素节点里的内容----innerHTML

     当获取了元素之后，如果我们需要拿到元素中的内容，则需要用另一种方法得到，元素里的内容可能包括：文本或元素，需要用到innerHTML属性
     
     1.5.3 获取元素节点中的文本----innerText

     利用innerText属性获取的只能是文本节点，不能是其他，当然innerText属性除了获取，也可以设置元素中的文本。
     
     1.5.4获取元素的类名-----className

     利用className属性获取元素的类名，以字符串的形式返回。同时可以设置新的class类名，需要注意的是，返回值是一个字符串，如果更换其中一个类，则需要考虑该字符串中其他类是否应该一起设置。
     
     1.5.5获取元素样式 

     style属性可以获取元素内联样式的所有属性，当然如果继续在style中找属性名如:background-color，就可以得到该属性的值，以字符串的形式返回，同时也可以设置该属性，从而达到增加或更改样式，需要注意的是，以js形式增加的样式的优先级大于css优先级
     
     1.5.6获取元素属性--------getAttribute()

     可以获取元素的某个属性，要将属性名称放在括号中记得要用引号括起来，返回值就是字符串形式的属性值。
    
     1.5.7设置元素属性---------SetAttribute()

     可以设置元素的某个属性，第一个参数是属性名，第二个参数是属性值，都需要用引号括起来以引号分隔。
    
     1.5.8删除元素属性--------removeAttribute()
     
     可以删除某个元素的某个属性,括号中放入需要删除的属性名,用引号包裹.
     
 1.6增加元素:
     1.6.1创建元素节点-------document.createElement()

     利用js创建一个元素的方法是先在文档中创建一个标签document.createElement()括号中写标签名,当然要用字符串形式.创建之后不是就存在了,而是需要将这个已经创建的元素放到你想放到的元素(父级元素)中

     1.6.2创建文本节点--------document.createTetxnode('')
     
     利用js创建元素的文本节点,先在文档中创建文本document.createTetxnode('一段文本')在括号中将要创建的字符串放入,最后插入到需要的元素中.
     
     1.6.3css样式赋予-------style.cssText

     是一个css的样式集合,它可以把css层叠样式表直接放在该属性后,就不需要一条一条去赋予样式了,可以一次性赋予样式.---- div.style.cssText='width:100px;height:100px;background-color:blue;';
    
     1.6.4 在某元素前插入创建的新元素---insertBefore()

     insertBefore() 和appendChild()用法基本一致,都是向父级中插入一个子元素,但区别是insertBefore()是可以选择插入的位置,它需要插入到某一个子元素之前的位置,因此需要那个子元素,insertBefore()有两个参数,第一个参数是需要插入的元素,第二个参数是在谁之前插入,两个参数用逗号分隔.
   
 1.7删除和替换元素:
     1.7.1元素的替换--------replaceChild()
     
     元素的替换是在父元素中一个子元素需要被另一个新的子元素所替代,使用replaceChild()方法,该方法有两个参数,第一个参数是将要替换的新元素,第二个是被替换的旧元素,中间用逗号分隔.

     1.7.2元素的删除--------removeChild()

     元素的删除是在父元的其中一个子元素需要删除,使用removeChild()方法,将需要删除的元素放入括号中.
     
 1.8查找节点(node):
     概念:节点是dom树上的每一个节点,其中包括:元素,文本,属性,注释等等,常用的有三个,元素,文本,属性

     1.8.1节点的属性----var mydiv=document.getElementById('mydiv'); console.log(mydiv.nodeName);

     1.8.2层次节点-------节点可以分为:父节点与子节点,兄弟节点,当我们知道其中之一的时候,可以用一些方法找到另一个.

     1.8.3获取所有子节点-------使用childNodes属性拿到的是该元素下的所有节点,包含所有节点类型,不单单只是元素.

     1.8.4获取第一个和最后一个子节点----用firstChild和lastChild可以拿到该父元素下的第一个和最后一个子节点,注意不一定是元素节点.

     1.8.5获取父节点-----使用parentNode属性可以拿到该元素的父节点,注意父节点只有一个.

     1.8.6获取兄弟节点------使用previousSibling和nextSibling可以获得该元素的前一个和后一个兄弟节点,只能获取一个.
     
 1.9元素的位置属性
     需要获取式元素的宽度和高度,使用style是无法获取的,所以我们选择用offsetWidth和offsetHeight属性,该属性可以获取元素的占位宽高,它也包含了内边距和边框
     clientWidth和clientHeight------clientWidth和clientHeight属性也可以获取元素的宽高,但与offsetWidth不同的是不包含边框.
     子元素与父元素的距离----offsetLeft和offsetTop是距离body左边界和上边界的距离,但如果该子元素使用了定位属性,则offsetLeft和offsetTop参照的就不再是body而是距离它最近的父级元素
     
